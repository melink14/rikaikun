queue_rules:
  - name: default
    conditions: [] # no extra conditions needed to get merged

pull_request_rules:
  - name: Auto-merge dependabot
    conditions:
      # Also covered by Github protections but this reduces noise from mergify.
      - '#approved-reviews-by>=1'
      - author=dependabot[bot]
    actions:
      queue:
        name: default
        # Each PR is one commit, but may have extras added during review so squash.
        method: squash
        commit_message_template: |
          {{ commits[0].message }}

  - name: Recreate dependabot PR on conflict
    conditions:
      # Also covered by Github protections but this reduces noise from mergify.
      - '#approved-reviews-by>=1'
      - author=dependabot[bot]
      - conflict
    actions:
      comment:
        message: '@dependabot recreate'

  - name: Automatic merge when Github conditions pass
    conditions:
      # Also covered by Github protections but this reduces noise from mergify.
      - '#approved-reviews-by>=1'
      # Don't try to merge stacked pull requests into non merged parents.
      - base=main
      # Allow individuals to opt out of mergify on high churn PRs
      - label!=work-in-progress
      # Allow marking a PR as expecting changes while also approving
      - label!='changes requested'
      # Don't run on PRs by dependabot (or users with dependabot in their name)
      - author~=^(?:(?!dependabot).)*$
    actions:
      queue:
        name: default
        # Each PR is one commit, but may have extras added during review so squash.
        method: squash
        # Uses original PR title and body for squashed commit message.
        commit_message_template: |
          {{ title }} (#{{ number }})

          {{ body }}

  - name: Notify author on queue failure
    conditions:
      - 'check-failure=Queue: Embarked in merge train'
    actions:
      comment:
        message: >
          Hey @{{ author }}, this pull request failed to merge and has been
          dequeued from the merge train.  If you believe your PR failed in
          the merge train because of a flaky test, requeue it by commenting
          with `@mergifyio requeue`.
          More details can be found on the `Queue: Embarked in merge train`
          check-run.
