queue_rules:
  - name: default
    conditions: [] # no extra conditions needed to get merged

pull_request_rules:
  - name: Auto-merge dependabot
    conditions:
      # Also covered by Github protections but this reduces noise from mergify.
      - '#approved-reviews-by>=1'
      - author=dependabot[bot]
      - '#commits-behind=0'
      # Don't auto-merge PRs where non dep change had to be committed as well
      - '#commits=1'
    actions:
      merge:
        method: squash

  - name: Have Dependabot rebase when out of date
    # Sometimes Dependabot creates a PR on an old branch and never updates.
    # See dependabot/dependabot-core#4031
    conditions:
      # Also covered by Github protections but this reduces noise from mergify.
      - '#approved-reviews-by>=1'
      - author=dependabot[bot]
      - '#commits-behind>0'
      # Don't auto-merge PRs where non dep change had to be committed as well
      - '#commits=1'
    actions:
      comment:
        message: '@dependabot rebase'

  - name: Approve PRs by melink14 after they are marked ready
    conditions:
      - author=melink14
      - label=self-approved
    actions:
      review:
        type: APPROVE
        message: "melink14 says it's fine so it must be fine!"

  - name: Automatic merge when Github conditions pass
    conditions:
      # Also covered by Github protections but this reduces noise from mergify.
      - '#approved-reviews-by>=1'
      # Don't try to merge stacked pull requests into non merged parents.
      - base=main
      # Allow individuals to opt out of mergify on high churn PRs
      - label!=work-in-progress
      # Allow marking a PR as expecting changes while also approving
      - label!='changes requested'
      # Don't run on PRs by dependabot (or users with dependabot in their name)
      - author~=^(?:(?!dependabot).)*$
    actions:
      queue:
        name: default
        # Each PR is one commit, but may have extras added during review so squash.
        method: squash
        # Uses original PR title and body for squashed commit message.
        commit_message_template: |
          {{ title }} (#{{ number }})

          {{ body }}
