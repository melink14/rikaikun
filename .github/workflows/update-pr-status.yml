name: Update PR status
on:
  workflow_run:
    workflows: ['No unresolved comments']

permissions:
  statuses: write

jobs:
  updatePRStatus:
    runs-on: ubuntu-latest
    steps:
      - run: echo '::debug::${{ escapeData(toJson(github.event.workflow_run)) }}'
        name: 'workflow_run output'
      - run: echo '::debug::${{ escapeData(toJson(github.event.workflow)) }}'
        name: 'workflow object output'
      # Adapted from https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
      - name: 'Download artifact'
        if: github.event.action== 'completed'
        uses: actions/github-script@v4.0.2
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{ github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "desc"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{ github.workspace }}/desc.zip', Buffer.from(download.data));
      - run: unzip desc.zip
        if: github.event.action == 'completed'
      - name: 'Read description'
        if: github.event.action == 'completed'
        uses: actions/github-script@v4.0.2
        id: read_description
        with:
          script: |
            var fs = require('fs');
            return String(fs.readFileSync('./DESC')) + ' Re-run if stale.'
          result-encoding: string
      - name: 'Set PR Status'
        uses: Sibz/github-status-action@v1.1.5
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: ${{ github.event.workflow_run.name }}
          description: '${{ steps.read_description.outputs.result }}'
          state: ${{ github.event.workflow_run.conclusion || 'pending' }}
          sha: ${{ github.event.workflow_run.head_sha }}
          target_url: ${{ github.event.workflow_run.html_url }}
